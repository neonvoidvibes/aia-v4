@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: "Avenir Next";
  src: url("https://fonts.cdnfonts.com/css/avenir-next-lt-pro") format("woff2");
  font-weight: 400;
  font-style: normal;
}

/* --- Base Theme Variables (Dark Mode Defaults) --- */
/* These variables define the default dark theme and are used by Shadcn components */
:root {
  /* Base colors */
  --background: 220 13% 40%; /* Dark background */
  --foreground: 0 0% 100%; /* White foreground */

  /* UI elements */
  --radius: 1.5rem;
  --message-radius: 2rem;
  --input-gray: 0 0% 90%; /* Light gray for input/bubbles in dark mode */

  /* Text colors */
  --text-primary: 0 0% 100%;
  --text-secondary: 0 0% 80%;
  --text-muted: 0 0% 60%;

  /* Shadcn Component Variables (Dark Defaults) */
  --card: 220 13% 40%; /* Match dark background */
  --popover: 220 13% 40%;
  --primary: 0 0% 98%; /* White */
  --primary-foreground: 0 0% 9%; /* Black */
  --secondary: 0 0% 14.9%;
  --secondary-foreground: 0 0% 98%;
  --muted: 0 0% 14.9%; /* Darker gray for muted elements */
  --accent: 0 0% 14.9%;
  --accent-foreground: 0 0% 98%;
  --destructive: 0 62.8% 30.6%;
  --destructive-foreground: 0 0% 98%;
  --border: 0 0% 25%; /* Slightly lighter border */
  --input: 0 0% 25%;
  --ring: 0 0% 83.1%;

  /* Custom Button State Variables (Define defaults, overridden by .light/.dark) */
  --button-active: 0 0% 0%; /* e.g., Submit button icon color when active */
  --button-active-bg: 0 0% 100%; /* e.g., Submit button background when active */
  --button-inactive: 0 0% 30%; /* e.g., Submit button icon color when inactive/disabled */
}

/* --- Light Theme Overrides --- */
.light {
  /* Base colors */
  --background: 0 0% 95%; /* Light background */
  --foreground: 0 0% 10%; /* Dark foreground */

  /* UI elements */
  --input-gray: 0 0% 88%; /* Brighter gray for input/bubbles in light mode */

  /* Text colors */
  --text-primary: 0 0% 0%;
  --text-secondary: 0 0% 30%;
  --text-muted: 0 0% 45%;

  /* Shadcn Component Variables (Light Overrides) */
  --card: 0 0% 100%; /* Default white card */
  --popover: 0 0% 100%;
  --primary: 0 0% 9%; /* Black */
  --primary-foreground: 0 0% 98%; /* White */
  --secondary: 0 0% 96.1%;
  --secondary-foreground: 0 0% 9%;
  --muted: 0 0% 90%; /* Adjusted muted for tab list bg */
  --accent: 0 0% 96.1%;
  --accent-foreground: 0 0% 9%;
  --destructive: 0 84.2% 60.2%;
  --destructive-foreground: 0 0% 98%;
  --border: 0 0% 89.8%;
  --input: 0 0% 89.8%;
  --ring: 0 0% 3.9%;

  /* Custom Button State Variables (Light Overrides) */
  --button-active: 0 0% 20%; /* Dark gray icon */
  --button-active-bg: transparent; /* No background */
  --button-inactive: 0 0% 65%; /* Lighter gray */
}

/* --- Settings Dialog: Force Sub-Container Backgrounds in Light Mode --- */
/* Target DocumentUpload Card within Memory Tab Sections */
.light .fixed-dialog .memory-tab-grid .memory-section .document-upload-card {
  --card: var(--background); /* Override Shadcn variable */
  background-color: hsl(var(--card)) !important; /* Apply it */
  border: none !important;
  box-shadow: none !important;
  padding: 0 !important;
}
/* Target inner parts if necessary */
.light .fixed-dialog .memory-tab-grid .memory-section .document-upload-card > * {
  background-color: hsl(var(--card)) !important;
}

/* Target DocumentUpload Card specifically within Documents Tab using data attribute */
.light .fixed-dialog [role="tabpanel"][data-radix-value="documents"] .document-upload-card {
  --card: var(--background); /* Override Shadcn variable */
  background-color: hsl(var(--card)) !important; /* Apply it */
  border: none !important;
  box-shadow: none !important;
  padding: 0 !important;
}
/* Target inner parts if necessary */
.light .fixed-dialog [role="tabpanel"][data-radix-value="documents"] .document-upload-card > * {
  background-color: hsl(var(--card)) !important;
}
/* --- End Settings Dialog Fixes --- */


/* --- Global Styles --- */
body {
  font-family: "Avenir Next", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
  /* Use CSS variables for background */
  background: linear-gradient(to bottom, hsl(var(--background) / 0.9), hsl(var(--background) / 1.1));
  color: hsl(var(--foreground));
  min-height: 100vh; /* Fallback */
  min-height: 100dvh; /* Use dynamic viewport height */
  transition: background 0.3s ease, color 0.3s ease;
  overflow: hidden; /* Prevent body scrolling */
  font-size: 19px; /* Adjusted base font size */
  line-height: 1.6; /* Adjusted line height */
}

/* Keep mobile font size potentially smaller */
@media (max-width: 640px) {
  body {
    font-size: 16px; /* Default smaller size for mobile */
  }
}

.light body {
  background: linear-gradient(to bottom, hsl(0 0% 98%), hsl(0 0% 90%));
  color: black;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

@layer base {
  * {
    @apply border-border; /* Use Shadcn variable */
  }
}

/* --- Layout Containers --- */
.chat-container {
  max-width: 800px;
  margin: 0 auto;
  height: 100vh;
  display: flex;
  flex-direction: column;
  position: relative;
}

.messages-container {
  flex-grow: 1; /* Allow message container to take up space */
  overflow-y: auto;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
  /* Default padding (for desktop/larger screens) */
  padding: 4px 10px 1.5rem 10px;
}
/* Mobile: Add horizontal padding to match header */
@media (max-width: 640px) {
  .messages-container {
    padding-left: 1rem; /* 16px */
    padding-right: 1rem; /* 16px */
  }
}
/* Input area container */
.input-area-container {
  display: flex;
  flex-direction: column;
  background-color: transparent;
  z-index: 10;
  position: relative;
  padding: 0.125rem 10px 0 10px; /* Default horizontal padding */
}
/* Mobile: Ensure input area padding matches message area */
@media (max-width: 640px) {
  .input-area-container {
    padding-left: 1rem; /* 16px */
    padding-right: 1rem; /* 16px */
  }
}


.input-container {
  background-color: hsl(var(--input-gray));
  border-radius: 9999px;
  padding: 8px 16px; /* Keep internal padding */
  display: flex;
  align-items: center;
  /* Desktop styles */
  margin: 16px auto;
  width: calc(100% - 32px); /* Default width for desktop */
  max-width: 800px;
  position: relative;
  box-sizing: border-box; /* Ensure padding is included in width calc */
}
/* Mobile: Make input container fill padded parent */
@media (max-width: 640px) {
  .input-container {
    width: 100%; /* Fill the padded input-area-container */
    margin: 8px 0; /* Adjust vertical margin, remove side margin */
  }
}


/* Input field text color (should be black in both themes) */
.input-container input {
  color: black; /* Explicitly black */
  background-color: transparent; /* Ensure transparent background */
  border: none;
  outline: none;
  flex: 1;
  padding: 0 8px; /* Adjust padding as needed */
  font-size: inherit; /* Ensure input inherits body font size */
}

/* --- Message Bubbles --- */
.message-bubble {
  border-radius: var(--message-radius);
  max-width: 80%;
  padding: 12px 16px;
  white-space: pre-wrap; /* Preserve line breaks */
  animation: fadeIn 0.3s ease-out;
  margin-bottom: 8px; /* Add some base margin */
  /* Removed overflow-wrap: break-word; Let parent handle overflow if needed */
  /* Removed white-space: pre-wrap; */
}

/* Target the span directly for word break control */
.message-bubble span {
    word-break: normal !important; /* Prevent breaking mid-word */
    display: inline-block; /* Or block, depending on desired layout, prevents some odd flex/inline breaks */
    max-width: 100%; /* Ensure span doesn't overflow bubble */
}

.user-bubble {
  background-color: hsl(var(--input-gray));
  color: black; /* User bubble text always black */
  align-self: flex-end;
  border-radius: var(--message-radius); /* Set default radius for all corners */
  /* Override bottom-right corner */
  border-bottom-right-radius: 4px; /* Fixed small radius (no !important) */
  margin-right: 8px;
}

.user-bubble.with-attachment {
  border-top-right-radius: 4px; /* Fixed small radius (no !important) */
  border-bottom-right-radius: var(--message-radius); /* Explicitly set back to default */
}

.ai-bubble {
  background-color: transparent;
  color: hsl(var(--foreground)); /* Inherit theme text color */
  align-self: flex-start;
  padding-left: 0; /* Remove default padding */
  margin-left: 8px;
  max-width: 100%; /* Ensure AI bubble can take full container width */
}

.light .ai-bubble {
   color: black; /* Ensure AI text is black in light mode */
}

/* System message styling */
.message-bubble[data-role="system"] { /* Assuming data-role attribute is added */
    background-color: transparent;
    color: hsl(var(--muted-foreground));
    font-size: 0.875rem; /* text-sm */
    font-style: italic;
    text-align: center;
    max-width: 90%;
    align-self: center;
    padding: 8px 16px;
}


/* --- Input Area Controls --- */
.plus-button-container {
  display: flex;
  align-items: center;
  justify-content: center;
  padding-right: 4px;
}

.plus-menu,
.record-ui {
  position: absolute;
  bottom: 100%;
  background-color: hsl(var(--input-gray)); /* Use variable */
  border-radius: 9999px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  z-index: 10;
  margin-bottom: 8px;
  transition: opacity 0.3s ease;
  display: flex;
  align-items: center;
}

.plus-menu {
  left: 0;
  padding: 8px 0;
  flex-direction: column; /* Stack icons vertically */
}

.record-ui {
  left: -12px; /* Shift further left */
  padding: 8px 12px;
  gap: 8px;
}

/* Popup menu items */
.plus-menu button {
  padding: 8px 10px;
  /* color handled by theme rules below */
  opacity: 1; /* Remove default opacity */
  transition: color 0.2s, opacity 0.2s;
  background: none;
  border: none;
  cursor: pointer;
}
.plus-menu button:hover {
  /* color handled by theme rules below */
  opacity: 0.8; /* Slight dim on hover */
}

/* Record UI buttons */
.record-ui button {
  padding: 4px; /* Smaller padding */
  /* color handled by theme rules below */
  background: none;
  border: none;
  cursor: pointer;
  transition: color 0.2s, opacity 0.2s;
}
.record-ui button:hover {
  /* color handled by theme rules below */
  opacity: 0.8; /* Slight dim on hover */
}
.record-ui button:disabled {
  /* color handled by theme rules below */
  opacity: 0.5;
  cursor: not-allowed;
}
.record-ui button svg {
  stroke-width: 2px;
}
.record-ui span {
  font-size: 0.875rem; /* text-sm */
  font-weight: 500; /* font-medium */
  color: hsl(var(--text-secondary)); /* Match icon color */
}
.light .record-ui span { color: black; } /* Ensure visibility in light mode */
.dark .record-ui span { color: black; } /* Ensure visibility in dark mode */

/* --- Popup Menu & Record Control Icons --- */
/* Default icon colors (use secondary text) */
.plus-menu button svg, /* Target SVG within button */
.record-ui button svg { /* Target SVG within button */
  color: hsl(var(--text-secondary));
  transition: color 0.2s;
}
/* Hover state (use primary text) */
.plus-menu button:hover svg,
.record-ui button:hover svg {
  color: hsl(var(--text-primary));
}
/* Dark Mode - Force SVG stroke color */
.dark .plus-menu button svg,
.dark .record-ui button svg {
  stroke: #333333 !important; /* Dark Gray stroke */
  color: #333333 !important; /* Dark Gray color */
}
.dark .plus-menu button:hover svg,
.dark .record-ui button:hover svg {
  stroke: #000000 !important; /* Black stroke on hover */
  color: #000000 !important; /* Black color on hover */
}
/* Light mode specific icon colors (ensure sufficient contrast) */
.light .plus-menu button svg,
.light .record-ui button svg {
  stroke: hsl(0 0% 30%) !important; /* Use stroke */
  color: hsl(0 0% 30%) !important; /* Ensure dark enough default */
}
.light .plus-menu button:hover svg,
.light .record-ui button:hover svg {
  stroke: hsl(0 0% 0%) !important; /* Use stroke */
  color: hsl(0 0% 0%) !important; /* Black on hover */
}

/* Disabled state for record UI buttons */
.record-ui button:disabled svg {
  stroke: hsl(var(--button-inactive)) !important; /* Use inactive variable for stroke */
  color: hsl(var(--button-inactive)) !important;
  opacity: 0.5;
}

/* Recording/Paused specific icon colors override inherited button color */
.dark .plus-menu button.recording, /* Target button, not just SVG */
.dark .plus-menu button.recording svg {
  color: #ef4444 !important; /* Red */
  stroke: #ef4444 !important; /* Also set stroke */
}
.dark .plus-menu button.paused, /* Target button, not just SVG */
.dark .plus-menu button.paused svg {
  color: #eab308 !important; /* Yellow */
  stroke: #eab308 !important; /* Also set stroke */
}
.dark .record-ui button svg.text-red-500 { color: #ef4444 !important; stroke: #ef4444 !important; } /* Red */
.dark .record-ui button svg.text-yellow-500 { color: #eab308 !important; stroke: #eab308 !important; } /* Yellow */
/* Keep light mode specific overrides if necessary */
.light .plus-menu button.recording svg { color: #ef4444 !important; stroke: #ef4444 !important; }
.light .plus-menu button.paused svg { color: #eab308 !important; stroke: #eab308 !important; }
.light .record-ui button svg.text-red-500 { color: #ef4444 !important; stroke: #ef4444 !important; }
.light .record-ui button svg.text-yellow-500 { color: #eab308 !important; stroke: #eab308 !important; }


/* Ensure background colors are explicitly set (without !important if possible) */
.plus-menu,
.record-ui {
  background-color: hsl(var(--input-gray));
}
/* Ensure inner elements don't override */
.plus-menu *,
.record-ui * {
   background-color: transparent; /* Inner elements should be transparent */
}

/* --- Submit Button Styling --- */
/* Detailed active/inactive state styling is handled via conditional */
/* Tailwind classes in simple-chat-interface.tsx to avoid CSS conflicts. */
/* Base layout */
.input-container button[type="submit"] {
  border-radius: 9999px;
  padding: 4px;
  height: 28px;
  width: 28px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s, color 0.2s;
  border: none;
  cursor: pointer;
}
/* Base SVG uses currentColor */
.input-container button[type="submit"] svg {
  color: currentColor;
  stroke: currentColor;
  fill: none;
}
/* Base Square fill uses currentColor */
.input-container button[type="submit"] .fill-current {
  fill: currentColor;
}
/* Disabled cursor */
.input-container button[type="submit"]:disabled {
    cursor: not-allowed;
}
/* --- End Submit Button Styling --- */


/* --- Message Actions --- */
.message-actions {
  /* Removed position: absolute; */
  /* Removed z-index: 5; */
  opacity: 0;
  visibility: hidden;
  padding: 2px 0;
  gap: 6px;
  transition: opacity 0.2s ease, visibility 0.2s ease;
}
.group:hover .message-actions, .message-actions:hover {
  opacity: 1;
  visibility: visible;
}
/* Removed absolute positioning styles */
/* .user-actions { right: 8px; bottom: -36px; } */
/* .assistant-actions { left: 8px; bottom: -24px; } */

.action-button {
  padding: 4px;
  border-radius: 4px;
  background-color: transparent;
  transition: opacity 0.2s ease;
  opacity: 0.5;
  color: hsl(var(--foreground));
}
.action-button:hover {
  opacity: 1;
}

/* --- Settings Dialog --- */
.fixed-dialog {
  width: 600px !important;
  max-width: 90vw !important;
  overflow: hidden !important;
  top: 80px !important; /* Position from top */
  left: 50% !important;
  transform: translateX(-50%) !important;
  margin: 0 !important;
  max-height: calc(100vh - 120px); /* Max height relative to viewport */
}
/* Dialog Content */
.fixed-dialog > div[role="dialog"] {
  max-height: 100%; /* Allow content to fill dialog */
  display: flex;
  flex-direction: column;
}
/* Tabs List Background */
.fixed-dialog .tabs-list-container { /* Add a wrapper if needed or target Shadcn's list directly */
  background-color: hsl(var(--muted));
}
.light .fixed-dialog .tabs-list-container {
  background-color: hsl(0 0% 90%); /* Slightly darker gray */
}
.dark .fixed-dialog .tabs-list-container {
  background-color: hsl(0 0% 20%); /* Slightly lighter gray */
}
/* Tab Content Area */
.tab-content-wrapper {
  flex-grow: 1; /* Allow content to fill space */
  overflow: hidden; /* Prevent wrapper overflow */
}
.tab-content-scrollable {
  max-height: 100%; /* Fill wrapper */
  overflow-y: auto; /* Scroll content */
  scrollbar-width: thin;
  scrollbar-color: rgba(155, 155, 155, 0.5) transparent;
}
.tab-content-scrollable::-webkit-scrollbar { width: 6px; }
.tab-content-scrollable::-webkit-scrollbar-track { background: transparent; }
.tab-content-scrollable::-webkit-scrollbar-thumb { background-color: rgba(155, 155, 155, 0.5); border-radius: 20px; border: transparent; }

/* Settings Sub-Container Backgrounds (Light Mode) */
/* Target DocumentUpload Card within Memory Tab Sections */
.light .fixed-dialog .memory-tab-grid .memory-section .document-upload-card {
  --card: var(--background); /* Override Shadcn variable */
  background-color: hsl(var(--card)) !important; /* Apply it */
  border: none !important;
  box-shadow: none !important;
  padding: 0 !important;
}
/* Target inner parts if necessary */
.light .fixed-dialog .memory-tab-grid .memory-section .document-upload-card > * {
  background-color: hsl(var(--card)) !important;
}

/* Target DocumentUpload Card specifically within Documents Tab using data attribute */
.light .fixed-dialog [role="tabpanel"][data-radix-value="documents"] .document-upload-card {
  --card: var(--background); /* Override Shadcn variable */
  background-color: hsl(var(--card)) !important; /* Apply it */
  border: none !important;
  box-shadow: none !important;
  padding: 0 !important;
}
/* Target inner parts if necessary */
.light .fixed-dialog [role="tabpanel"][data-radix-value="documents"] .document-upload-card > * {
  background-color: hsl(var(--card)) !important;
}
/* --- End Settings Dialog Fixes --- */


/* --- Miscellaneous --- */
.welcome-message {
  font-weight: 700;
  font-size: 2rem;
  text-align: center;
  color: hsl(var(--foreground));
  opacity: 0.8;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  pointer-events: none;
}

.status-bar {
  color: hsl(var(--foreground) / 0.7);
  font-size: 0.8rem;
  text-align: center;
  padding: 16px 0 16px 0; /* Added padding-bottom */
  font-weight: 300;
  transition: color 0.3s ease;
}
.light .status-bar {
  color: hsl(var(--foreground) / 0.7);
}

/* Scroll to bottom button */
.scroll-to-bottom-button {
  position: absolute;
  bottom: 115px; /* Increased value to move it up */
  left: 50%;
  transform: translateX(-50%);
  background-color: hsl(var(--input-gray));
  color: hsl(var(--text-secondary));
  border-radius: 50%;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  cursor: pointer;
  z-index: 20;
  transition: all 0.2s ease;
  animation: fadeIn 0.3s ease;
}
/* Dark mode scroll button styling */
.dark .scroll-to-bottom-button {
  background-color: rgba(66, 71, 93, 0.5); /* Example: Darker semi-transparent background */
  color: hsl(var(--text-secondary)); /* Keep text color */
  backdrop-filter: blur(4px); /* Optional: Add blur for effect */
  -webkit-backdrop-filter: blur(4px); /* Safari */
}
.dark .scroll-to-bottom-button:hover {
    background-color: rgba(80, 85, 110, 0.6); /* Slightly lighten on hover */
}

.scroll-to-bottom-button:hover {
  filter: brightness(0.95);
  transform: translateX(-50%) translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

/* Animation Keyframes */
@keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }
@keyframes slideUp { from { transform: translateY(10px); } to { transform: translateY(0); } }

/* Confirmation Modal Styles */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 50; /* Lower z-index */
  animation: fadeIn 0.2s ease;
}

.modal-content {
  background-color: white;
  border-radius: 12px;
  padding: 24px;
  width: 90%;
  max-width: 400px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
  animation: slideUp 0.3s ease;
  position: relative; /* Ensure content is targetable */
  z-index: 51; /* Higher than overlay */
}

/* Thinking Indicator */
.thinking-indicator {
  display: flex;
  gap: 4px; /* Spacing between dots */
  align-items: center;
  padding-left: 10px; /* Align with AI bubble */
}

.thinking-dot {
  width: 18px; /* Further increased size */
  height: 18px;
  background-color: hsl(var(--foreground) / 0.6); /* Slightly less transparent base */
  border-radius: 50%;
  animation: breathing-dot 2s infinite ease-in-out; /* Apply new animation */
}

/* Removed nth-child delays */

/* Keyframes for the dot breathing animation */
@keyframes breathing-dot {
  0%, 100% {
    transform: scale(0.6); /* Smaller size */
    opacity: 0.5; /* Dimmer */
  }
  50% {
    transform: scale(1.0); /* Full size */
    opacity: 1.0; /* Solid */
  }
}

.modal-title {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 12px;
  color: #333;
}

.modal-message {
  margin-bottom: 24px;
  color: #666;
}

.modal-buttons {
  display: flex;
  justify-content: flex-end;
  gap: 12px;
}

.modal-button {
  padding: 8px 16px;
  border-radius: 6px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative; /* Ensure buttons are targetable */
  z-index: 52; /* Higher than content */
}

.modal-button-cancel {
  background-color: transparent;
  color: #666;
}

.modal-button-cancel:hover {
  background-color: #f5f5f5;
}

.modal-button-confirm {
  background-color: #f44336;
  color: white;
}

.modal-button-confirm:hover {
  background-color: #e53935;
}

/* Copy button animation */
.copy-button-animation {
  animation: fadeInOut 2s ease;
}

@keyframes fadeInOut {
  0% { opacity: 0; }
  20% { opacity: 1; }
  80% { opacity: 1; }
  100% { opacity: 0; }
}

/* Improve button touch/click behavior */
button {
  -webkit-tap-highlight-color: transparent;
  touch-action: manipulation;
}

/* Make collapse buttons more responsive */
.attachments-container button {
  cursor: pointer;
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.more-button,
.collapse-button {
  cursor: pointer !important;
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  position: relative;
  z-index: 1;
  transition: background-color 0.2s ease;
  -webkit-tap-highlight-color: transparent;
}
.more-button:active,
.collapse-button:active {
  background-color: rgba(0, 0, 0, 0.1) !important;
}
.more-button:focus-visible,
.collapse-button:focus-visible {
  outline: 2px solid #4285f4;
  outline-offset: 2px;
}
.more-button > div,
.collapse-button > div {
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Add a class to handle hidden elements */
.hidden {
  display: none !important;
}

/* --- Utility Classes --- */
.fixed { position: fixed; }
.inset-0 { top: 0; right: 0; bottom: 0; left: 0; }
.pointer-events-none { pointer-events: none; }
.z-10 { z-index: 10; }

/* Responsive text sizing */
@media (max-width: 640px) {
  .text-2xl.md\:text-3xl { font-size: 1.5rem; }
}
@media (min-width: 641px) {
  .text-2xl.md\:text-3xl { font-size: 1.875rem; }
}

/* Document Upload Card Consistency */
.document-upload-card .flex-1 { min-width: 0; }
.document-upload-card .truncate { max-width: 100%; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
.document-upload-card .flex-shrink-0 { flex-shrink: 0; }
.attachment-item .flex-1 { min-width: 0; }
.file-attachment-minimal .truncate { max-width: 100%; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }

/* Reorder document upload */
.document-upload-card .upload-container {
  display: flex !important;
  flex-direction: column-reverse !important;
}
.document-upload-card .document-files-container {
  margin-bottom: 16px !important;
}
.document-upload-card .border-2.border-dashed {
  margin-top: 0 !important;
}

/* Fix the chevron color in light mode */
.light .chevron-rotate { color: black; }

/* Ensure consistent background colors for UI elements */
.bg-input-gray { background-color: hsl(var(--input-gray)) !important; }
.user-bubble { background-color: hsl(var(--input-gray)) !important; }
.dark .user-bubble { color: black !important; }
.light .user-bubble { color: black !important; }
.plus-menu-item { color: hsl(var(--text-secondary)); }
.plus-menu-item:hover { color: hsl(var(--text-primary)); }
.scroll-to-bottom-button { background-color: hsl(var(--input-gray)); color: hsl(var(--text-secondary)); }
.scroll-to-bottom-button:hover { background-color: hsl(var(--input-gray)); filter: brightness(0.95); }

/* Ensure inputs use black text */
input, textarea, select { color: black !important; }

/* Ensure assistant message text color per theme */
.light .ai-message,
.light .ai-bubble,
.light .ai-message * { color: black !important; }
.dark .ai-message { color: white !important; }

/* Memory Tab Mobile Adjustments */
@media (max-width: 768px) {
  .memory-tab-content.has-open-section { overflow-y: auto !important; max-height: 70vh !important; padding-bottom: 20px !important; }
  .memory-tab-grid { display: flex !important; flex-direction: column !important; gap: 0 !important; margin: 0 !important; padding: 0 !important; }
  .section-toggle { display: flex; align-items: center; justify-content: space-between; width: 100%; padding: 8px 10px; background-color: transparent; border: none; border-radius: 8px; margin-bottom: 4px; cursor: pointer; }
  .section-content { overflow: hidden; transition: max-height 0.3s ease; padding: 0 !important; margin: 0 !important; }
  .section-content.open { padding-bottom: 8px !important; max-height: 400px !important; overflow-y: auto !important; }
  .document-upload-container { max-height: none !important; overflow: visible !important; margin: 0 !important; padding: 0 !important; }
  .fixed-dialog { max-height: 80vh !important; overflow: hidden !important; }
  .tab-content-wrapper { max-height: 70vh !important; overflow: hidden !important; }
  .memory-tab-content.has-open-section { max-height: 60vh !important; }
  .space-y-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: calc(0.25rem * var(--tw-space-y-reverse)); }
}

.memory-section-title { font-weight: 600; font-size: 1rem; }
.tab-content-inner { padding: 0 !important; margin: 0 !important; }

/* Memory Section Overflow Fixes */
.memory-section .document-upload-container { max-width: 100% !important; overflow-x: hidden !important; box-sizing: border-box !important; width: 100% !important; max-height: 300px !important; overflow-y: auto !important; }
.section-content { max-width: 100% !important; overflow-x: hidden !important; box-sizing: border-box !important; width: 100% !important; }
.memory-section .document-files-container { max-width: 100% !important; overflow-x: hidden !important; box-sizing: border-box !important; max-height: 200px !important; overflow-y: auto !important; }
.memory-section .document-files-container > div { max-width: 100% !important; box-sizing: border-box !important; }
.memory-section .document-files-container .flex { max-width: 100% !important; box-sizing: border-box !important; }
.memory-section .document-files-container .truncate { max-width: 100% !important; overflow: hidden !important; text-overflow: ellipsis !important; white-space: nowrap !important; }

/* Dialog Overflow Fixes */
.fixed-dialog > div[role="dialog"] { max-height: 70vh !important; overflow-y: auto !important; }
.tab-content-wrapper { max-height: 65vh !important; overflow: hidden !important; }
.tab-content-scrollable { max-height: 60vh !important; overflow-y: auto !important; }

/* Final Modal Z-index Fix */
.modal-overlay { z-index: 9999 !important; }
.modal-content { z-index: 10000 !important; }
.modal-button { z-index: 10001 !important; }